***********
Инсталляция
***********

Данное руководство описывает установку приложения на сервер, но не настройку Web-сервера.
Поскольку в качестве Web-сервера можно использовать различное программное обеспечение, то подразумевается,
что настройка будет производится системным администратором. Руководства по настройке от разработчиков фреймворка **Django**
можно посмотреть `тут <https://docs.djangoproject.com/en/1.10/howto/deployment/wsgi/>`_.

Установку условно можно разделить на несколько этапов:

Клонирование git-репозитория
----------------------------

Репозиторий проекта находится по адресу: `https://github.com/alexmon1989/realestate <https://github.com/alexmon1989/realestate>`_.

Перейдите в каталог, где будет располагаться ваш проект, и выполните команду:

.. code-block:: bash

   git clone https://github.com/alexmon1989/realestate.git

Создание виртуального окружения Python
--------------------------------------

Перейдите к каталог проекта:

.. code-block:: bash

    cd realestate

Установите пакет virtualenv:

.. code-block:: bash

    sudo pip3 install virtualenv

Создайте виртуальное окружение:

.. code-block:: bash

    virtualenv .env

Активируйте его:

.. code-block:: bash

    source .env/bin/activate

Установка Python библиотек
--------------------------

Установка библиотек для проекта производится командой:

.. code-block:: bash

    pip install -r requirements.txt

Настройка конфигурационного файла
---------------------------------

Переименуйте файл *realestate/settings.py.example* в *realestate/settings.py*.

Для безопасной работы приложения задайте уникальное значение ключа *SECRET_KEY*, а значение ключа *DEBUG* установите в False.

Настройка подключения к MySQL
-----------------------------

В файле *ssettings.py* найдите секцию:

.. code-block:: python

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'realestate',
            'USER': 'root',
            'PASSWORD': '',
            'HOST': 'localhost',
            'PORT': '3306',
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            },
        }
    }

И замените значения ключей на необходимые:

| **USER**: имя пользователя БД;
| **PASSWORD**: пароль пользователя БД;
| **HOST**: IP-адрес БД;
| **NAME**: название БД.
|

После этого сохраните файл.

Применение миграций
-------------------

Для создания структуры БД необходимо воспользоваться механизмом миграций. Для этого выполните команду:

.. code-block:: bash

    python manage.py migrate

Перемещение статических файлов в STATIC_ROOT.
---------------------------------------------

Как правило, nginx настроен на "выдачу" статических файлов с одного конкретного каталога.
Обычно его называют *static* и располагают в корневом каталоге проекта.
Вы можете изменить название каталога изменив настройку *STATIC_ROOT* в settings.py. При этом каждое приложение Django может
иметь свой массив статических файлов. Чтобы собрать их в одном каталоге *STATIC_ROOT*, выполните команду:

.. code-block:: bash

    python manage.py collectstatic
